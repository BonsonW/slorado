name: C/C++ CI

on:
  push:
    branches: [ 'main', 'compilation_tests' ]
  pull_request:
    branches: [ '*' ]

jobs:
  ubuntu_16_cuda:
    name: Ubuntu 16 CUDA
    runs-on: ubuntu-20.04
    container: ubuntu:16.04
    steps:
    - name: install git
      run: apt-get update && apt-get install -y software-properties-common && add-apt-repository ppa:git-core/ppa && apt-get update -y && apt-get install git -y
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: install packages
      run: apt-get update && apt-get install -y zlib1g-dev wget datamash unzip bzip2 make g++ apt-transport-https
    - name: cuda
      run: |
        export DEBIAN_FRONTEND=noninteractive
        wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/cuda-ubuntu1604.pin
        mv cuda-ubuntu1604.pin /etc/apt/preferences.d/cuda-repository-pin-600
        apt-key adv --fetch-keys http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/7fa2af80.pub
        add-apt-repository "deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/ /"
        apt-get update
        apt-get -y --allow-unauthenticated install cuda
    - name: torch
      run: scripts/install-torch12.sh
    - name: build cuda=1
      run: make cuda=1 -j4
  ubuntu_16:
    name: Ubuntu 16
    runs-on: ubuntu-20.04
    container: ubuntu:16.04
    steps:
    - name: install git
      run: apt-get update && apt-get install -y software-properties-common && add-apt-repository ppa:git-core/ppa && apt-get update -y && apt-get install git -y
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: install packages
      run: apt-get update && apt-get install -y zlib1g-dev wget datamash unzip bzip2 make g++ apt-transport-https
    - name: torch
      run: scripts/install-torch12.sh
    - name: build
      run: make -j4
    - name: test
      run: make test
  ubuntu_20:
    name: Ubuntu 20
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: install packages
      run: sudo apt-get update && sudo apt-get install zlib1g-dev wget datamash unzip bzip2
    - name: torch
      run: scripts/install-torch12.sh
    - name: build
      run: make -j8
    - name: test
      run: make test
  ubuntu_20_koi:
    name: Ubuntu 20 CUDA KOI
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: install packages
      run: sudo apt-get update && sudo apt-get install zlib1g-dev wget datamash unzip bzip2
    - name: cuda
      run: |
        export DEBIAN_FRONTEND=noninteractive
        wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/cuda-keyring_1.0-1_all.deb
        sudo dpkg -i cuda-keyring_1.0-1_all.deb
        wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/cuda-ubuntu2004.pin
        sudo mv cuda-ubuntu2004.pin /etc/apt/preferences.d/cuda-repository-pin-600
        sudo apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/7fa2af80.pub
        sudo add-apt-repository "deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/ /"
        sudo apt-get update
        sudo apt-get -y install cuda
    - name: koi
      run: scripts/install-koi.sh
    - name: torch
      run: scripts/install-torch12.sh
    - name: build koi=1 cuda=1
      run: make -j4 koi=1 cuda=1