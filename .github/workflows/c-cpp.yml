name: C/C++ CI

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ '*' ]

# thanks https://github.com/dixyes/ghactionsplay/blob/main/.github/workflows/glibc217node20.yml

jobs:
  ubuntu_16:
    name: Ubuntu 16
    runs-on: ubuntu-20.04
    container:
      image: ubuntu:16.04
      volumes:
        - /node20217:/node20217:rw,rshared
        - /node20217:/__e/node20:ro,rshared
    steps:
    - name: install git
      run: apt-get update && apt-get install -y software-properties-common && add-apt-repository ppa:git-core/ppa && apt-get update -y && apt-get install git -y
    - name: nodejs
      run: |
        apt-get install -y wget xz-utils
        wget https://unofficial-builds.nodejs.org/download/release/v20.9.0/node-v20.9.0-linux-x64-glibc-217.tar.xz
        tar -xf node-v20.9.0-linux-x64-glibc-217.tar.xz --strip-components 1 -C /node20217
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: install packages
      run: apt-get update && apt-get install -y zlib1g-dev wget datamash unzip bzip2 make g++ apt-transport-https bc
    - name: torch
      run: scripts/install-torch2.sh cpu
    - name: build
      run: make -j2
    - name: test
      run: export DEVICE=cpu && make test
  ubuntu_16_cuda:
    name: Ubuntu 16 CUDA
    runs-on: ubuntu-20.04
    container:
      image: ubuntu:16.04
      volumes:
        - /node20217:/node20217:rw,rshared
        - /node20217:/__e/node20:ro,rshared
    steps:
    - name: install git
      run: apt-get update && apt-get install -y software-properties-common && add-apt-repository ppa:git-core/ppa && apt-get update -y && apt-get install git -y
    - name: nodejs
      run: |
        apt-get install -y wget xz-utils
        wget https://unofficial-builds.nodejs.org/download/release/v20.9.0/node-v20.9.0-linux-x64-glibc-217.tar.xz
        tar -xf node-v20.9.0-linux-x64-glibc-217.tar.xz --strip-components 1 -C /node20217
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: install packages
      run: apt-get update && apt-get install -y zlib1g-dev wget datamash unzip bzip2 make g++ apt-transport-https
    - name: cuda
      run: |
        export DEBIAN_FRONTEND=noninteractive
        wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/cuda-ubuntu1604.pin
        mv cuda-ubuntu1604.pin /etc/apt/preferences.d/cuda-repository-pin-600
        wget -q -O - http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/3bf863cc.pub | sudo apt-key add -
        add-apt-repository "deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/ /"
        apt-get update
        apt-get -y --allow-unauthenticated install cuda
    - name: torch
      run: scripts/install-torch2.sh
    - name: build cuda=1
      run: make cuda=1 -j2
  ubuntu_18:
    name: Ubuntu 18
    runs-on: ubuntu-20.04
    container:
      image: ubuntu:18.04
      volumes:
        - /node20217:/node20217:rw,rshared
        - /node20217:/__e/node20:ro,rshared
    steps:
    - name: install git
      run: apt-get update && apt-get install -y software-properties-common && add-apt-repository ppa:git-core/ppa && apt-get update -y && apt-get install git -y
    - name: nodejs
      run: |
        apt-get install -y wget xz-utils
        wget https://unofficial-builds.nodejs.org/download/release/v20.9.0/node-v20.9.0-linux-x64-glibc-217.tar.xz
        tar -xf node-v20.9.0-linux-x64-glibc-217.tar.xz --strip-components 1 -C /node20217
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: install packages
      run: apt-get update && apt-get install -y zlib1g-dev wget datamash unzip bzip2 make g++ apt-transport-https bc
    - name: torch
      run: scripts/install-torch2.sh cpu
    - name: build
      run: make -j2
    - name: test
      run: export DEVICE=cpu && make test
  ubuntu_20:
    name: Ubuntu 20
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: install packages
      run: sudo apt-get update && sudo apt-get install zlib1g-dev wget datamash unzip bzip2
    - name: torch
      run: scripts/install-torch2.sh cpu
    - name: build
      run: make -j2
    - name: test
      run: export DEVICE=cpu && make test
  ubuntu_20_cuda:
    name: Ubuntu 20 CUDA
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: install packages
      run: sudo apt-get update && sudo apt-get install zlib1g-dev wget datamash unzip bzip2
    - name: cuda
      run: |
        export DEBIAN_FRONTEND=noninteractive
        wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/cuda-keyring_1.0-1_all.deb
        sudo dpkg -i cuda-keyring_1.0-1_all.deb
        wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/cuda-ubuntu2004.pin
        sudo mv cuda-ubuntu2004.pin /etc/apt/preferences.d/cuda-repository-pin-600
        sudo apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/7fa2af80.pub
        sudo add-apt-repository "deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/ /"
        sudo apt-get update
        sudo apt-get -y install cuda-11-1
    - name: torch
      run: scripts/install-torch2.sh
    - name: build cuda=1
      run: make -j2 cuda=1
  ubuntu_22:
    name: Ubuntu 22
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: install packages
      run: sudo apt-get update && sudo apt-get install zlib1g-dev wget datamash unzip bzip2 valgrind
    - name: torch
      run: scripts/install-torch2.sh cpu
    - name: build
      run: make -j2
    - name: test
      run: export DEVICE=cpu && make test
    - name: valgrind
      run: export DEVICE=cpu && test/test.sh mem
  ubuntu_22_rocm:
    name: Ubuntu 22 ROCm
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: install packages
      run: sudo apt-get update && sudo apt-get install zlib1g-dev wget datamash unzip bzip2
    - name: rocm
      run: |
        sudo apt update
        wget https://repo.radeon.com/amdgpu-install/5.7.1/ubuntu/jammy/amdgpu-install_5.7.50701-1_all.deb
        sudo apt install ./amdgpu-install_5.7.50701-1_all.deb
        sudo amdgpu-install --no-dkms --usecase=rocmdev
    - name: torch
      run: scripts/install-torch2.sh rocm
    - name: build
      run: make rocm=1 -j2
  ubuntu_24:
    name: Ubuntu 24
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: install packages
      run: sudo apt-get update && sudo apt-get install zlib1g-dev wget datamash unzip bzip2
    - name: torch
      run: scripts/install-torch2.sh cpu
    - name: build
      run: make -j2
    - name: test
      run: export DEVICE=cpu && make test
    - name: build asan
      run: make clean && make asan=1 -j2
    - name: asan
      run: export DEVICE=cpu && make test